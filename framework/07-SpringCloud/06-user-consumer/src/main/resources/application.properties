# 配置端口
server.port=8084

# 给自己起名字
spring.application.name=user-consumer

# 注册到eureka
eureka.client.service-url.defaultZone=http://127.0.0.1:10086/eureka,http://127.0.0.1:10087/eureka

# 希望使用自己的IP地址
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=127.0.0.1
eureka.instance.ip-address=127.0.0.1

# 负载均衡轮训
user-service.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RoundRobinRule

# 全局超时时长配置,访问时间超过3秒就报错
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=3000

# 断路器请求的量预值,10次统计一下,超过5次失败就认为有问题
hystrix.command.default.circuitBreaker.requestVolumeThreshold=10

# 休眠时间10秒
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=10000

# 错误百分比,错误到达百分比就触发
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50


# 设置feign的熔断熔断,建立连接时长,超过1秒没有建立连接抛出异常,使用feign
ribbon.ConnectionTimeOut=2000

# 设置feign的读取超时时长,链接后,读取时间超过2秒,抛出异常,使用feign
ribbon.ReadTimeOut=3000

# 启动Hystix的支持,使用feign,启动熔断
feign.hystrix.enabled=true

# 开启feign的请求压缩
feign.compression.request.enabled=true

# 开启feign的响应压缩
feign.compression.response.enabled=true

# 设置压缩的数据类型
feign.compression.request.mime-types=text/html,application/xml,application/json

# 设置触发压缩的大小下线
feign.compression.request.min-request-size=2048